(function(a,b){'object'==typeof exports&&'object'==typeof module?module.exports=b():'function'==typeof define&&define.amd?define('jsevolution',[],b):'object'==typeof exports?exports.jsevolution=b():a.jsevolution=b()})('undefined'==typeof self?this:self,function(){return function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={i:d,l:!1,exports:{}};return a[d].call(e.exports,e,e.exports,b),e.l=!0,e.exports}var c={};return b.m=a,b.c=c,b.d=function(a,c,d){b.o(a,c)||Object.defineProperty(a,c,{configurable:!1,enumerable:!0,get:d})},b.n=function(a){var c=a&&a.__esModule?function(){return a['default']}:function(){return a};return b.d(c,'a',c),c},b.o=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},b.p='',b(b.s=0)}([function(a,b,c){a.exports=c(1)},function(a,b,c){'use strict';Object.defineProperty(b,'__esModule',{value:!0});var d=c(2);Object.defineProperty(b,'Chromosome',{enumerable:!0,get:function(){return d.Chromosome}}),Object.defineProperty(b,'IntegerChromosome',{enumerable:!0,get:function(){return d.IntegerChromosome}}),Object.defineProperty(b,'BitChromosome',{enumerable:!0,get:function(){return d.BitChromosome}});var e=c(3);Object.defineProperty(b,'Individual',{enumerable:!0,get:function(){return e.Individual}}),Object.defineProperty(b,'Population',{enumerable:!0,get:function(){return e.Population}});var f=c(4);Object.defineProperty(b,'DefaultFunctions',{enumerable:!0,get:function(){return f.DefaultFunctions}});var g=c(5);Object.defineProperty(b,'RandomNumber',{enumerable:!0,get:function(){return g.RandomNumber}}),Object.defineProperty(b,'GeneticAlgorithm',{enumerable:!0,get:function(){return g.GeneticAlgorithm}})},function(a,b){'use strict';Object.defineProperty(b,'__esModule',{value:!0});class c{static create(a,b,d){return new c(a,b,d)}constructor(a,b,c){this.values=Array(a.length),this.min=b,this.max=c,a.forEach((a,b)=>{this.set(b,a)})}clone(){const a=Object.assign(Object.create(this),this);return a.values=[...this.values],a}set(a,b){this.values[a]=b}swap(a,b){var c=[this.values[b],this.values[a]];this.values[a]=c[0],this.values[b]=c[1]}move(a,b){this.values.splice(b,0,...this.values.splice(a,1))}}b.Chromosome=c;class d extends c{static create(a,b,c){return new d(a,b,c)}constructor(a,b=-Infinity,c=Infinity){super(a,b,c)}set(a,b){if(b>=this.min&&b<=this.max)this.values[a]=b;else throw new TypeError}}b.IntegerChromosome=d;class e extends d{static create(a){return new e(a)}constructor(a){super(a,0,1)}}b.BitChromosome=e},function(a,b){'use strict';Object.defineProperty(b,'__esModule',{value:!0});class c{static create(a,b,d,e){return new c(a.create(b),d,e)}constructor(a,b,c){this.chromosome=a,this.fitness=b,this.objective=c}clone(){const a=Object.assign(Object.create(this),this);return a.chromosome=this.chromosome.clone(),a}update(a){return this.fitness=a.fitness(this),this.objective=a.objective(this),this}}b.Individual=c;class d{static create(a,b,c){return new d(a,b,c)}constructor(a,b,d){this.individuals=[],d.forEach((a)=>{this.individuals.push(c.create(b,a))}),this.selected=0,this.size=a}add(a){this.contains(a)||this.individuals.push(a)}contains(a){const b=[];return this.individuals.forEach((a)=>{b.push(a.chromosome.values.toString())}),b.includes(a.chromosome.values.toString())}getBest(){let a={objective:Infinity};return this.individuals.forEach((b)=>{b.objective<a.objective&&(a=b)}),a}removeWorst(a){this.individuals.sort((a,b)=>{if(a.fitness<b.fitness)return-1;return a.fitness>b.fitness?1:0});const b=this.getBest();for(let c=a;0<c&&2<this.individuals.length;){const a=this.individuals.pop();this.individuals=this.individuals.slice(0,-1),a===b?this.individuals=[...[a],...this.individuals]:c-=1}}}b.Population=d},function(a,b){'use strict';Object.defineProperty(b,'__esModule',{value:!0});b.DefaultFunctions=class{before(){}beforeEach(){}fitness(){return Infinity}objective(a){return this.fitness(a)}selection(a){const b=a.individuals[a.selected];return a.selected=(a.selected+1)%Math.min(a.individuals.length,a.size),b}mutation(a){return a.clone()}crossover(a,b){return a.fitness<b.fitness?a.clone():b.clone()}afterEach(){}after(){}}},function(a,b){'use strict';Object.defineProperty(b,'__esModule',{value:!0});class c{static init(a=0){c.i=0,c.j=0,c.keystream=c.keyStream(`${a}`)}static keyStream(a){const b=[];let c=0;for(let c=0;256>c;c+=1)b[c]=c;for(let d=0;256>d;d+=1){c=(c+b[d]+a[d%a.length].charCodeAt(0))%256;const e=b[d];b[d]=b[c],b[c]=e}return b}static randomByte(){c.i=(c.i+1)%256,c.j=(c.j+c.keystream[c.i])%256;const a=c.keystream[c.i];return c.keystream[c.i]=c.keystream[c.j],c.keystream[c.j]=a,c.keystream[(c.keystream[c.i]+c.keystream[c.j])%256]}static get(){c.keystream||c.init('seed');const a=(c.randomByte()+256*c.randomByte()+65536*c.randomByte()+16777216*c.randomByte()+4294967296*c.randomByte()+1099511627776*c.randomByte()+281474976710656*c.randomByte()+72057594037927940*c.randomByte())/18446744073709552000;return a}static getInteger(a){return Math.floor(c.get()*a)}}b.RandomNumber=c;class d{static run(a,b,e,f=0.5,g=0.5,h=0){c.init(h);const i=new d(a,e,b,f,g,h);return i.evolve(),i}constructor(a,b,c,d,e){this.iterations=0,this.stopped=!1,this.population=a,this.functions=new c,this.population.individuals.forEach((a)=>{a.update(this.functions)}),this.generations=b,this.mutationProbability=d,this.crossoverProbability=e}evolve(){for(this.functions.before(this);this.hasNext()&&!this.hasStopped();)this.functions.beforeEach(this),this.next(),this.functions.afterEach(this);this.functions.after(this)}next(){if(this.iterations<this.generations){for(let a=0;a<this.population.size;a+=1)c.get()<this.mutationProbability&&this.mutation(),c.get()<this.crossoverProbability&&this.crossover();this.population.individuals.length>this.population.size&&this.population.removeWorst(this.population.individuals.length-this.population.size),++this.iterations}}hasNext(){return this.iterations<this.generations}stop(){this.stopped=!0}hasStopped(){return this.stopped}mutation(){this.population.add(this.functions.mutation(this.functions.selection(this.population)).update(this.functions))}crossover(){this.population.add(this.functions.crossover(this.functions.selection(this.population),this.functions.selection(this.population)).update(this.functions))}}b.GeneticAlgorithm=d}])});
//# sourceMappingURL=index.js.map