{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ed7b2dcb0c76d4250f7a","webpack:///./src/chromosome.js","webpack:///./src/population.js","webpack:///./src/functions.js","webpack:///./src/algorithm.js"],"names":["constructor","values","clone","cloned","Object","set","swap","move","min","max","value","ChromosomeClass","update","functions","individuals","Individual","add","contains","i","individual","getBest","objective","Infinity","removeWorst","l","r","bestIndividual","before","beforeEach","fitness","selection","population","Math","mutation","crossover","leftParent","rightParent","afterEach","after","seed","RandomNumber","j","S","k","key","random","mutationProbability","crossoverProbability","geneticAlgorithm","evolve","next","hasNext","stop","hasStopped"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"jsevolution\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jsevolution\"] = factory();\n\telse\n\t\troot[\"jsevolution\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ed7b2dcb0c76d4250f7a","export class Chromosome {\n  static create(values, min, max) {\n    return new Chromosome(values, min, max);\n  }\n  constructor(values, min, max) {\n    this.values = new Array(values.length);\n    this.min = min;\n    this.max = max;\n    values.forEach((v, i) => {\n      this.set(i, v);\n    });\n  }\n  clone() {\n    const cloned = Object.assign(Object.create(this), this);\n    cloned.values = [...this.values];\n    return cloned;\n  }\n  set(index, value) {\n    this.values[index] = value;\n  }\n  swap(leftIndex, rightIndex) {\n    [this.values[leftIndex], this.values[rightIndex]] =\n      [this.values[rightIndex], this.values[leftIndex]];\n  }\n  move(fromIndex, toIndex) {\n    this.values.splice(toIndex, 0, ...this.values.splice(fromIndex, 1));\n  }\n}\n\nexport class IntegerChromosome extends Chromosome {\n  static create(values, min, max) {\n    return new IntegerChromosome(values, min, max);\n  }\n  constructor(values, min = -Infinity, max = Infinity) {\n    super(values, min, max);\n  }\n  set(index, value) {\n    if (value >= this.min && value <= this.max) {\n      this.values[index] = value;\n    } else {\n      throw new TypeError();\n    }\n  }\n}\n\nexport class BitChromosome extends IntegerChromosome {\n  static create(values) {\n    return new BitChromosome(values);\n  }\n  constructor(values) {\n    super(values, 0, 1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/chromosome.js","export class Individual {\n  static create(ChromosomeClass, values, fitness, objective) {\n    return new Individual(ChromosomeClass.create(values), fitness, objective);\n  }\n  constructor(chromosome, fitness, objective) {\n    this.chromosome = chromosome;\n    this.fitness = fitness;\n    this.objective = objective;\n  }\n  clone() {\n    const cloned = Object.assign(Object.create(this), this);\n    cloned.chromosome = this.chromosome.clone();\n    return cloned;\n  }\n  update(functions) {\n    this.fitness = functions.fitness(this);\n    this.objective = functions.objective(this);\n    return this;\n  }\n}\n\nexport class Population {\n  static create(size, ChromosomeClass, individuals) {\n    return new Population(size, ChromosomeClass, individuals);\n  }\n  constructor(size, ChromosomeClass, individuals) {\n    this.individuals = [];\n    individuals.forEach((v) => {\n      this.individuals.push(Individual.create(ChromosomeClass, v));\n    });\n    this.selected = 0;\n    this.size = size;\n  }\n  add(individual) {\n    if (!this.contains(individual)) {\n      this.individuals.push(individual);\n    }\n  }\n  contains(individual) {\n    const individuals = [];\n    this.individuals.forEach((i) => {\n      individuals.push(i.chromosome.values.toString());\n    });\n    return individuals.includes(individual.chromosome.values.toString());\n  }\n  getBest() {\n    let individual = {\n      objective: Infinity,\n    };\n    this.individuals.forEach((i) => {\n      if (i.objective < individual.objective) {\n        individual = i;\n      }\n    });\n    return individual;\n  }\n  removeWorst(numberIndividuals) {\n    this.individuals.sort((l, r) => {\n      if (l.fitness < r.fitness) {\n        return -1;\n      } else if (l.fitness > r.fitness) {\n        return 1;\n      }\n      return 0;\n    });\n    const bestIndividual = this.getBest();\n    let i = numberIndividuals;\n    while (i > 0 && this.individuals.length > 2) {\n      const individual = this.individuals.pop();\n      this.individuals = this.individuals.slice(0, -1);\n      if (individual === bestIndividual) {\n        this.individuals = [...[individual], ...this.individuals];\n      } else {\n        i -= 1;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/population.js","export class DefaultFunctions {\n  before() {\n  }\n  beforeEach() {\n  }\n  fitness() {\n    return Infinity;\n  }\n  objective(individual) {\n    return this.fitness(individual);\n  }\n  selection(population) {\n    const individual = population.individuals[population.selected];\n    population.selected =\n      (population.selected + 1) % Math.min(population.individuals.length, population.size);\n    return individual;\n  }\n  mutation(individual) {\n    return individual.clone();\n  }\n  crossover(leftParent, rightParent) {\n    if (leftParent.fitness < rightParent.fitness) {\n      return leftParent.clone();\n    }\n    return rightParent.clone();\n  }\n  afterEach() {\n  }\n  after() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/functions.js","export class RandomNumber {\n  static init(seed = 0) {\n    RandomNumber.i = 0;\n    RandomNumber.j = 0;\n    RandomNumber.keystream = RandomNumber.keyStream(`${seed}`);\n  }\n  static keyStream(key) {\n    const S = [];\n    let j = 0;\n    for (let i = 0; i < 256; i += 1) {\n      S[i] = i;\n    }\n    for (let k = 0; k < 256; k += 1) {\n      j = (j + S[k] + key[k % key.length].charCodeAt(0)) % 256;\n      const swap = S[k];\n      S[k] = S[j];\n      S[j] = swap;\n    }\n    return S;\n  }\n  static randomByte() {\n    RandomNumber.i = (RandomNumber.i + 1) % 256;\n    RandomNumber.j = (RandomNumber.j + RandomNumber.keystream[RandomNumber.i]) % 256;\n    const swap = RandomNumber.keystream[RandomNumber.i];\n    RandomNumber.keystream[RandomNumber.i] = RandomNumber.keystream[RandomNumber.j];\n    RandomNumber.keystream[RandomNumber.j] = swap;\n    return RandomNumber.keystream[\n      (RandomNumber.keystream[RandomNumber.i] + RandomNumber.keystream[RandomNumber.j]) % 256\n    ];\n  }\n  static get() {\n    if (!RandomNumber.keystream) {\n      RandomNumber.init('seed');\n    }\n    const random = (\n      (RandomNumber.randomByte()) +\n      (RandomNumber.randomByte() * 256) +\n      (RandomNumber.randomByte() * 65536) +\n      (RandomNumber.randomByte() * 16777216) +\n      (RandomNumber.randomByte() * 4294967296) +\n      (RandomNumber.randomByte() * 1099511627776) +\n      (RandomNumber.randomByte() * 281474976710656) +\n      (RandomNumber.randomByte() * 72057594037927940)\n    ) / 18446744073709551616;\n    return random;\n  }\n  static getInteger(max) {\n    return Math.floor(RandomNumber.get() * max);\n  }\n}\n\nexport class GeneticAlgorithm {\n  static run(\n    population, generations, Functions,\n    mutationProbability = 0.5, crossoverProbability = 0.5, seed = 0,\n  ) {\n    RandomNumber.init(seed);\n    const geneticAlgorithm = new GeneticAlgorithm(\n      population, Functions, generations,\n      mutationProbability, crossoverProbability, seed,\n    );\n    geneticAlgorithm.evolve();\n    return geneticAlgorithm;\n  }\n  constructor(population, generations, Functions, mutationProbability, crossoverProbability) {\n    this.iterations = 0;\n    this.stopped = false;\n    this.population = population;\n    this.functions = new Functions();\n    this.population.individuals.forEach((i) => {\n      i.update(this.functions);\n    });\n    this.generations = generations;\n    this.mutationProbability = mutationProbability;\n    this.crossoverProbability = crossoverProbability;\n  }\n  evolve() {\n    this.functions.before(this);\n    while (this.hasNext() && !this.hasStopped()) {\n      this.functions.beforeEach(this);\n      this.next();\n      this.functions.afterEach(this);\n    }\n    this.functions.after(this);\n  }\n  next() {\n    if (this.iterations < this.generations) {\n      for (let i = 0; i < this.population.size; i += 1) {\n        if (RandomNumber.get() < this.mutationProbability) {\n          this.mutation();\n        }\n        if (RandomNumber.get() < this.crossoverProbability) {\n          this.crossover();\n        }\n      }\n      if (this.population.individuals.length > this.population.size) {\n        this.population.removeWorst(this.population.individuals.length - this.population.size);\n      }\n      this.iterations = this.iterations + 1;\n    }\n  }\n  hasNext() {\n    return this.iterations < this.generations;\n  }\n  stop() {\n    this.stopped = true;\n  }\n  hasStopped() {\n    return this.stopped;\n  }\n  mutation() {\n    this.population\n      .add(this.functions\n        .mutation(this.functions\n          .selection(this.population))\n        .update(this.functions));\n  }\n  crossover() {\n    this.population\n      .add(this.functions\n        .crossover(this.functions\n          .selection(this.population), this.functions\n          .selection(this.population))\n        .update(this.functions));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm.js"],"sourceRoot":""}